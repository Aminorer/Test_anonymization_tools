# scripts/init-ollama.ps1 - Initialisation Ollama pour Windows

Write-Host "üöÄ Initialisation d'Ollama pour l'anonymisation juridique..." -ForegroundColor Green

# Configuration
$OLLAMA_HOST = "localhost:11434"
$SELECTED_MODEL = "mistral:7b-instruct"

# Test de connexion
Write-Host "üîç Test de connexion √† Ollama..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://$OLLAMA_HOST/api/tags" -Method Get -TimeoutSec 10
    Write-Host "‚úÖ Ollama est accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Ollama non accessible. V√©rifiez que docker-compose est lanc√©" -ForegroundColor Red
    exit 1
}

# V√©rifier si le mod√®le existe
Write-Host "üîç V√©rification du mod√®le $SELECTED_MODEL..." -ForegroundColor Yellow
$models = $response.models
$modelExists = $models | Where-Object { $_.name -eq $SELECTED_MODEL }

if ($modelExists) {
    Write-Host "‚úÖ Mod√®le $SELECTED_MODEL d√©j√† install√©" -ForegroundColor Green
} else {
    Write-Host "üì• T√©l√©chargement du mod√®le $SELECTED_MODEL (4GB - patience...)..." -ForegroundColor Yellow
    try {
        $body = @{
            name = $SELECTED_MODEL
            stream = $false
        } | ConvertTo-Json
        
        $downloadResponse = Invoke-RestMethod -Uri "http://$OLLAMA_HOST/api/pull" -Method Post -Body $body -ContentType "application/json" -TimeoutSec 1800
        Write-Host "‚úÖ Mod√®le t√©l√©charg√© avec succ√®s" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Erreur lors du t√©l√©chargement: $($_.Exception.Message)" -ForegroundColor Red
        exit 1
    }
}

# Test du mod√®le
Write-Host "üß™ Test du mod√®le avec un exemple juridique..." -ForegroundColor Yellow
try {
    $testBody = @{
        model = $SELECTED_MODEL
        prompt = "Identifie les entit√©s dans ce texte juridique : 'Ma√Ætre Jean Dupont, 123 rue de la Paix 75001 Paris.' R√©ponds en JSON."
        stream = $false
        options = @{
            temperature = 0.1
            max_tokens = 300
        }
    } | ConvertTo-Json -Depth 3
    
    $testResponse = Invoke-RestMethod -Uri "http://$OLLAMA_HOST/api/generate" -Method Post -Body $testBody -ContentType "application/json" -TimeoutSec 60
    
    if ($testResponse.response) {
        Write-Host "‚úÖ Test r√©ussi !" -ForegroundColor Green
        Write-Host "üìã Exemple de r√©ponse:" -ForegroundColor Cyan
        Write-Host $testResponse.response.Substring(0, [Math]::Min(200, $testResponse.response.Length)) -ForegroundColor White
    }
} catch {
    Write-Host "‚ùå Test √©chou√©: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "‚ö†Ô∏è  Le mod√®le est install√© mais peut ne pas r√©pondre correctement" -ForegroundColor Yellow
}

# R√©sum√© final
Write-Host ""
Write-Host "üìä R√©sum√© de l'installation:" -ForegroundColor Cyan
Write-Host "================================"
Write-Host "ü§ñ Mod√®le: $SELECTED_MODEL" -ForegroundColor White
Write-Host "üåê URL: http://$OLLAMA_HOST" -ForegroundColor White
Write-Host "‚úÖ Status: Pr√™t pour l'anonymisation juridique" -ForegroundColor Green
Write-Host ""
Write-Host "üöÄ Votre syst√®me d'anonymisation est op√©rationnel !" -ForegroundColor Green
Write-Host "üí° Acc√©dez √† l'interface: http://localhost:9992" -ForegroundColor Yellow